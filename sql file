
CREATE DATABASE AgriData;
USE AgriData;

CREATE TABLE auths (
    auth_id INT AUTO_INCREMENT PRIMARY KEY,
    auth_name VARCHAR(100) NOT NULL,
    auth_email VARCHAR(255) NOT NULL UNIQUE,
    auth_pass VARCHAR(255) NOT NULL,
    auth_phone_no VARCHAR(15) NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create table for farmers
CREATE TABLE farmers (
    farmer_id INT AUTO_INCREMENT PRIMARY KEY,  
    farmer_name VARCHAR(100) NOT NULL,
    date_of_birth DATE NOT NULL,
    gender ENUM('Male', 'Female', 'Other') NOT NULL,
    phone_no VARCHAR(15) NOT NULL UNIQUE,
    address VARCHAR(255) NOT NULL,
    aadhar_id VARCHAR(12) NOT NULL UNIQUE  
);


CREATE TABLE loans (
    loan_id INT AUTO_INCREMENT PRIMARY KEY,
    loan_type VARCHAR(100) NOT NULL UNIQUE,
    description TEXT NOT NULL,
    eligibility TEXT NOT NULL,
    deleted BOOLEAN DEFAULT FALSE  -- Added column to mark if the loan is deleted
);


CREATE TABLE loans_taken (
    loan_type VARCHAR(100),  -- Change from loan_id to loan_type
    aadhar_id VARCHAR(12),
    bank_name VARCHAR(100) NOT NULL, 
    sanction_date DATE NOT NULL,
    due_date DATE NOT NULL,
    amount_taken DECIMAL(10, 2) NOT NULL,
    status ENUM('paid', 'unpaid') NOT NULL,
    PRIMARY KEY (loan_type, aadhar_id, sanction_date),  -- Composite Primary Key
    FOREIGN KEY (loan_type) REFERENCES loans(loan_type) ON DELETE NO ACTION,  -- Reference by loan_type
    FOREIGN KEY (aadhar_id) REFERENCES farmers(aadhar_id) ON DELETE CASCADE ON UPDATE CASCADE  -- Cascades on both delete and update
);

SELECT * FROM loans_taken;

CREATE TABLE subsidies (
    subsidy_id INT AUTO_INCREMENT PRIMARY KEY,
    subsidy_name VARCHAR(255) NOT NULL UNIQUE,
    description TEXT NOT NULL,
    eligibility TEXT NOT NULL,
    last_date_apply DATE NOT NULL,
	deleted BOOLEAN DEFAULT FALSE 
);

CREATE TABLE subsidies_taken (
	subsidy_name VARCHAR(255),
    aadhar_id VARCHAR(12),
    sanction_date DATE NOT NULL,
     PRIMARY KEY (subsidy_name, aadhar_id, sanction_date),  -- Composite Primary Key
    FOREIGN KEY (subsidy_name) REFERENCES subsidies(subsidy_name) ON DELETE NO ACTION,  
    FOREIGN KEY (aadhar_id) REFERENCES farmers(aadhar_id) ON DELETE CASCADE ON UPDATE CASCADE  -- Cascades on both delete and update
);

CREATE TABLE schemes (
    scheme_id INT AUTO_INCREMENT PRIMARY KEY,
    scheme_name VARCHAR(255) NOT NULL UNIQUE,
    description TEXT NOT NULL,
    eligibility TEXT NOT NULL,
    last_date_apply DATE NOT NULL,
    deleted BOOLEAN DEFAULT FALSE 
);

CREATE TABLE schemes_taken (
	scheme_name VARCHAR(255),
    aadhar_id VARCHAR(12),
    approval_date DATE NOT NULL,
	PRIMARY KEY (scheme_name, aadhar_id, approval_date),  -- Composite Primary Key
    FOREIGN KEY (scheme_name) REFERENCES schemes(scheme_name) ON DELETE NO ACTION,  
    FOREIGN KEY (aadhar_id) REFERENCES farmers(aadhar_id) ON DELETE CASCADE ON UPDATE CASCADE  -- Cascades on both delete and update
);

CREATE TABLE lands(
    land_id INT AUTO_INCREMENT PRIMARY KEY,
    aadhar_id VARCHAR(12),
    location VARCHAR(50) NOT NULL,
    soil_type VARCHAR(50) NOT NULL,
    land_size DECIMAL(10,4) NOT NULL,
    deleted BOOLEAN DEFAULT FALSE ,
    FOREIGN KEY (aadhar_id) REFERENCES farmers(aadhar_id)ON DELETE CASCADE ON UPDATE CASCADE  -- Cascades on both delete and update
    );
drop table crops;
CREATE TABLE crops (
    land_id INT ,
    crop_name VARCHAR(100) NOT NULL,
    crop_size DECIMAL(10,4) NOT NULL,
    soil_ph DECIMAL(10,4),
    planting_date DATE NOT NULL,
    harvest_date DATE ,
    crop_suggestion VARCHAR(100),
    deleted BOOLEAN DEFAULT FALSE ,
    primary key(land_id,crop_name,planting_date),
    FOREIGN KEY (land_id) REFERENCES lands(land_id)-- Cascades on both delete and update
    );
select * from crops;
select * from lands;
select * from farmers;
